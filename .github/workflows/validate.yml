---
name: Validation Pipeline

on:
  # Enable workflow as callable from another workflow
  workflow_call:
    inputs:
      python-versions:
        description: 'Python versions to test on (JSON array)'
        required: true
        type: string
      files-changed:
        description: 'Boolean string result for if any files have changed'
        type: string
        required: false
        default: 'false'
      build-files-changed:
        description: 'Boolean string result for if build files have changed'
        type: string
        required: false
        default: 'false'
      ci-files-changed:
        description: 'Boolean string result for if CI files have changed'
        type: string
        required: false
        default: 'false'
      doc-files-changed:
        description: 'Boolean string result for if documentation files have changed'
        type: string
        required: false
        default: 'false'
      src-files-changed:
        description: 'Boolean string result for if source files have changed'
        type: string
        required: false
        default: 'false'
      test-files-changed:
        description: 'Boolean string result for if test files have changed'
        type: string
        required: false
        default: 'false'
    outputs:
      new-release-detected:
        description: Boolean string result for if new release is available
        value: ${{ jobs.build.outputs.new-release-detected }}
      new-release-version:
        description: Version string for the new release
        value: ${{ jobs.build.outputs.new-release-version }}
      new-release-tag:
        description: Tag string for the new release
        value: ${{ jobs.build.outputs.new-release-tag }}
      new-release-is-prerelease:
        description: Boolean string result for if new release is a pre-release
        value: ${{ jobs.build.outputs.new-release-is-prerelease }}
      distribution-artifacts:
        description: Artifact Download name for the distribution artifacts
        value: ${{ jobs.build.outputs.distribution-artifacts }}

# set default Token permissions = none
permissions: { }

env:
  COMMON_PYTHON_VERSION: '3.12'
  PYTEST_TIMEOUT: 60

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    if: ${{ inputs.build-files-changed == 'true' || inputs.src-files-changed == 'true' || inputs.test-files-changed == 'true' || inputs.ci-files-changed == 'true' }}

    steps:
      - name: Setup | Checkout Repository at workflow sha
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
        with:
          ref: ${{ github.sha }}
          fetch-depth: 0

      - name: Setup | Force correct release branch on workflow sha
        run: |
          git checkout -B ${{ github.ref_name }}

      - name: Setup | Install Python ${{ env.COMMON_PYTHON_VERSION }}
        uses: actions/setup-python@e797f83bcb11b83ae66e0230d6156d7c80228e7c # v6
        with:
          python-version: ${{ env.COMMON_PYTHON_VERSION }}
          check-latest: true

      - name: Setup | Install UV
        uses: astral-sh/setup-uv@3259c6206f993105e3a61b142c2d97bf4b9ef83d # v7
        with:
          enable-cache: true

      - name: Build | Build next version artifacts
        id: version
        uses: python-semantic-release/python-semantic-release@4d4cb0ab842247caea1963132c242c62aab1e4d5 # v10.4.1
        with:
          github_token: ""
          build: true
          changelog: true
          commit: false
          push: false
          tag: false
          vcs_release: false

      - name: Build | Annotate next version
        if: steps.version.outputs.released == 'true'
        run: |
          printf '%s\n' "::notice::Next release will be '${{ steps.version.outputs.tag }}'"

      - name: Build | Create non-versioned distribution artifact
        if: steps.version.outputs.released == 'false'
        run: uv build

      - name: Build | Set distribution artifact variables
        id: build
        run: |
          printf '%s\n' "dist_dir=dist/*" >> "$GITHUB_OUTPUT"
          printf '%s\n' "artifacts_name=dist" >> "$GITHUB_OUTPUT"

      - name: Upload | Distribution Artifacts
        uses: actions/upload-artifact@330a01c490aca151604b8cf639adc76d48f6c5d4 # v5
        with:
          name: ${{ steps.build.outputs.artifacts_name }}
          path: ${{ steps.build.outputs.dist_dir }}
          if-no-files-found: error
          retention-days: 2

    outputs:
      new-release-detected: ${{ steps.version.outputs.released }}
      new-release-version: ${{ steps.version.outputs.version }}
      new-release-tag: ${{ steps.version.outputs.tag }}
      new-release-is-prerelease: ${{ steps.version.outputs.is_prerelease }}
      distribution-artifacts: ${{ steps.build.outputs.artifacts_name }}

  lint:
    name: Lint
    runs-on: ubuntu-latest
    if: ${{ inputs.files-changed == 'true' }}

    steps:
      - name: Setup | Checkout Repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
        with:
          ref: ${{ github.sha }}
          fetch-depth: 0

      - name: Setup | Install Python ${{ env.COMMON_PYTHON_VERSION }}
        uses: actions/setup-python@e797f83bcb11b83ae66e0230d6156d7c80228e7c # v6
        with:
          python-version: ${{ env.COMMON_PYTHON_VERSION }}

      - name: Setup | Install Task
        uses: go-task/setup-task@0ab1b2a65bc55236a3bc64cde78f80e20e8885c2 # v1
        with:
          version: 3.x
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup | Install UV
        uses: astral-sh/setup-uv@3259c6206f993105e3a61b142c2d97bf4b9ef83d # v7
        with:
          enable-cache: true

      - name: Setup | Install dependencies
        run: task deps:install -- --no-group=docs

      - name: Lint | Run all pre-commit hooks
        id: lint
        run: task pre-commit

      - name: Lint | Commit Checks
        run: |
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            task gitlint -- --commits "${{ github.event.pull_request.base.sha }}...${{ github.event.pull_request.head.sha }}"
          else
            task gitlint
          fi

  test:
    name: Test
    runs-on: ubuntu-latest
    needs: lint
    if: ${{ inputs.build-files-changed == 'true' || inputs.src-files-changed == 'true' || inputs.test-files-changed == 'true' || inputs.ci-files-changed == 'true' }}
    timeout-minutes: 10

    strategy:
      fail-fast: false
      matrix:
        python-version: ${{ fromJson(inputs.python-versions) }}

    steps:
      - name: Setup | Checkout Repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
        with:
          ref: ${{ github.sha }}
          fetch-depth: 0

      - name: Setup | Install Python ${{ matrix.python-version }}
        uses: actions/setup-python@e797f83bcb11b83ae66e0230d6156d7c80228e7c # v6
        with:
          python-version: ${{ matrix.python-version }}
          check-latest: true

      - name: Setup | Install Task
        uses: go-task/setup-task@0ab1b2a65bc55236a3bc64cde78f80e20e8885c2 # v1
        with:
          version: 3.x
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup | Install UV
        uses: astral-sh/setup-uv@3259c6206f993105e3a61b142c2d97bf4b9ef83d # v7
        with:
          enable-cache: true

      - name: Setup | Install dependencies
        run: |
          task deps:install -- --no-group=docs
          uv pip install pytest-github-actions-annotate-failures

      - name: Test | Run pytest on ${{ matrix.python-version }}
        id: tests
        run: |
          task test:ci -- \
            --timeout=${{ env.PYTEST_TIMEOUT }} \
            --cov-append \
            --junit-xml=tests/reports/pytest-results-${{ matrix.python-version }}.xml \

      - name: Test | Archive JUnit XML test results
        uses: actions/upload-artifact@330a01c490aca151604b8cf639adc76d48f6c5d4 # v5
        with:
          name: junit-report-${{ matrix.python-version }}
          path: tests/reports/pytest-results-${{ matrix.python-version }}.xml
          if-no-files-found: error
          retention-days: 2

      - name: Test | Rename coverage file
        run: mv .coverage .coverage.${{ matrix.python-version }}

      - name: Test | Archive coverage results
        uses: actions/upload-artifact@330a01c490aca151604b8cf639adc76d48f6c5d4 # v5
        with:
          name: coverage-report-${{ matrix.python-version }}
          path: .coverage.${{ matrix.python-version }}
          if-no-files-found: error
          include-hidden-files: true
          retention-days: 2

  upload-test-results:
    name: Upload Test Results
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Setup | Checkout Repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
        with:
          ref: ${{ github.sha }}
          fetch-depth: 0

      - name: Setup | Install Python ${{ env.COMMON_PYTHON_VERSION }}
        uses: actions/setup-python@e797f83bcb11b83ae66e0230d6156d7c80228e7c # v6
        with:
          python-version: ${{ env.COMMON_PYTHON_VERSION }}
          check-latest: true

      - name: Setup | Install UV
        uses: astral-sh/setup-uv@3259c6206f993105e3a61b142c2d97bf4b9ef83d # v7
        with:
          enable-cache: true

      - name: Report | Download test results
        uses: actions/download-artifact@018cc2cf5baa6db3ef3c5f8a56943fffe632ef53 # v6
        with:
          pattern: junit-report-*
          path: ./tests/reports/
          merge-multiple: true

      - name: Report | Upload test results
        uses: mikepenz/action-junit-report@5b7ee5a21e8674b695313d769f3cbdfd5d4d53a4 # v6.0.0
        with:
          report_paths: ./tests/reports/pytest-results-*.xml
          annotate_only: true

      - name: Report | Upload test results to Codecov
        uses: codecov/test-results-action@47f89e9acb64b76debcd5ea40642d25a4adced9f # v1.1.1
        with:
          directory: ./tests/reports/
          env_vars: PYTHON
          fail_ci_if_error: true
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Report | Download coverage reports
        uses: actions/download-artifact@018cc2cf5baa6db3ef3c5f8a56943fffe632ef53 # v6
        with:
          pattern: coverage-report-*
          path: ./tests/reports/
          merge-multiple: true

      - name: Report | Combine coverage reports
        run: |
          uvx coverage combine --append tests/reports
          uvx coverage xml -o tests/reports/coverage-combined.xml

      - name: Report | Upload coverage reports to Codecov
        uses: codecov/codecov-action@5a1091511ad55cbe89839c7260b706298ca349f7 # v5
        with:
          disable_search: true
          directory: ./tests/reports/
          fail_ci_if_error: true
          files: ./tests/reports/coverage-combined.xml
          token: ${{ secrets.CODECOV_TOKEN }}
