# Pre-commit configuration for waku
# See https://pre-commit.com for more information
default_install_hook_types: [ pre-commit, pre-push, commit-msg ]
default_stages: [ pre-commit, pre-push, manual ]

repos:
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v5.0.0
    hooks:
      - id: no-commit-to-branch
        args: [ "--branch", "master" ]
      - id: check-yaml
        args: [ "--unsafe" ]
        files: '\.(yaml|yml)$'
      - id: check-toml
        files: '\.toml$'
      - id: check-merge-conflict
      - id: end-of-file-fixer
        exclude: '^uv\.lock$'
      - id: trailing-whitespace
        args: [ "--markdown-linebreak-ext=md" ]
      - id: detect-private-key
      - id: check-illegal-windows-names
      - id: mixed-line-ending
        args: [ "--fix=lf" ]
      - id: check-case-conflict

  - repo: https://github.com/python-jsonschema/check-jsonschema
    rev: 0.33.0
    hooks:
      - id: check-github-workflows
        files: '^\.github/workflows/.*\.ya?ml$'
      - id: check-renovate
        files: '^\.github/renovate\.json$'
      - id: check-taskfile
        files: '^Taskfile\.yml$'

  - repo: https://github.com/rhysd/actionlint
    rev: v1.7.7
    hooks:
      - id: actionlint

  - repo: https://github.com/codespell-project/codespell
    rev: v2.4.1
    hooks:
      - id: codespell
        additional_dependencies: [ tomli ]
        files: '\.(py|pyi|md|yml|yaml|json|toml)$'

  - repo: local
    hooks:
      - id: commit-msg
        name: check commit message
        stages: [ commit-msg ]
        language: system
        entry: task gitlint -- --msg-filename
        fail_fast: true

      - id: uv-lock-check
        name: uv-lock-check
        entry: uv lock --locked
        language: system
        pass_filenames: false
        files: '^pyproject\.toml$'
        fail_fast: true

      - id: lint
        name: Run code linting
        entry: task lint -- --output-format=concise
        types: [ python ]
        language: system
        pass_filenames: false
        fail_fast: true
        stages: [ pre-commit, pre-push, manual ]

      - id: typecheck-mypy
        name: Run type checking with MyPy
        entry: env MYPY_PRETTY=0 task typecheck
        types: [ python ]
        language: system
        pass_filenames: false
        fail_fast: true
        stages: [ pre-push, manual ]  # Run on push only to speed up commits

      - id: typecheck-ty
        name: Run type checking with Ty
        entry: task ty
        types: [ python ]
        language: system
        pass_filenames: false
        fail_fast: true
        stages: [ pre-commit, pre-push, manual ]

      - id: deptry
        name: Check dependency usage
        entry: task deptry
        language: system
        pass_filenames: false
        fail_fast: true
        stages: [ pre-push, manual ]  # Run on push only to speed up commits

      - id: security-check
        name: Run security checks
        entry: task security-audit
        language: system
        pass_filenames: false
        fail_fast: true
        stages: [ pre-push, manual ]  # Run on push only to speed up commits
        verbose: true

  # Meta hooks
  - repo: meta
    hooks:
      - id: check-hooks-apply
      - id: check-useless-excludes
